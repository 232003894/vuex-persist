{"version":3,"file":"index.js","sources":["../src/MockStorage.ts","../src/index.ts"],"sourcesContent":["/**\r\n * Created by championswimmer on 22/07/17.\r\n */\r\nexport default class MockStorage implements Storage {\r\n  [index: number]: string;\r\n  [key: string]: any;\r\n\r\n  public get length(): number {\r\n    return Object.keys(this).length\r\n  }\r\n\r\n  public key(index: number): string | any {\r\n    return Object.keys(this)[index]\r\n  }\r\n\r\n  public setItem(key: string, data: any): void {\r\n    this[key] = data.toString()\r\n  }\r\n  public getItem(key: string): string {\r\n    return this[key]\r\n  }\r\n  public removeItem(key: string): void {\r\n    delete this[key]\r\n  }\r\n  public clear(): void {\r\n    for (const key of Object.keys(this)) {\r\n      delete this[key]\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Created by championswimmer on 18/07/17.\r\n */\r\nimport { Payload, Plugin, Store } from 'vuex'\r\nimport MockStorage from './MockStorage'\r\nimport merge from \"lodash/merge\";\r\n/**\r\n * Options to be used to construct a {@link VuexPersistence} object\r\n */\r\nexport interface PersistOptions<S> {\r\n  /**\r\n   * Window.Storage type object. Default is localStorage\r\n   */\r\n  storage?: Storage\r\n\r\n  /**\r\n   * Method to retrieve state from persistence\r\n   * @param key\r\n   * @param [storage]\r\n   */\r\n  restoreState?: (key: string, storage?: Storage) => S\r\n\r\n  /**\r\n   * Method to save state into persistence\r\n   * @param key\r\n   * @param state\r\n   * @param [storage]\r\n   */\r\n  saveState?: (key: string, state: {}, storage?: Storage) => void\r\n\r\n  /**\r\n   * Function to reduce state to the object you want to save.\r\n   * Be default, we save the entire state.\r\n   * You can use this if you want to save only a portion of it.\r\n   * @param state\r\n   */\r\n  reducer?: (state: S) => {}\r\n\r\n  /**\r\n   * Key to use to save the state into the storage\r\n   */\r\n  key?: string\r\n\r\n  /**\r\n   * Method to filter which mutations will trigger state saving\r\n   * Be default returns true for all mutations.\r\n   * Check mutations using <code>mutation.type</code>\r\n   * @param mutation object of type {@link Payload}\r\n   */\r\n  filter?: (mutation: Payload) => boolean\r\n\r\n  /**\r\n   * Names of modules that you want to persist.\r\n   * If you create your custom {@link PersistOptions.reducer} function,\r\n   * then that will override filter behaviour, not this argument\r\n   */\r\n  modules?: string[]\r\n}\r\n\r\n/**\r\n * A class that implements the vuex persistence.\r\n */\r\nexport class VuexPersistence<S, P extends Payload> implements PersistOptions<S> {\r\n  public storage: Storage\r\n  public restoreState: (key: string, storage?: Storage) => S\r\n  public saveState: (key: string, state: {}, storage?: Storage) => void\r\n  public reducer: (state: S) => {}\r\n  public key: string\r\n  public filter: (mutation: Payload) => boolean\r\n  public modules: string[]\r\n\r\n  /**\r\n   * The plugin function that can be used inside a vuex store.\r\n   */\r\n  public plugin: Plugin<S>\r\n  /**\r\n   * Create a {@link VuexPersistence} object.\r\n   * Use the <code>plugin</code> function of this class as a\r\n   * Vuex plugin.\r\n   * @param {PersistOptions} options\r\n   */\r\n  public constructor(options: PersistOptions<S>) {\r\n    this.key = ((options.key != null) ? options.key : 'vuex')\r\n    this.storage = (\r\n      (options.storage != null)\r\n        ? options.storage\r\n        : (new MockStorage())\r\n    )\r\n    this.restoreState = (\r\n      (options.restoreState != null)\r\n        ? options.restoreState\r\n        : ((key: string, storage?: Storage) =>\r\n          JSON.parse((storage || this.storage).getItem(key) || '{}')\r\n        )\r\n    )\r\n    this.saveState = (\r\n      (options.saveState != null)\r\n        ? options.saveState\r\n        : ((key: string, state: {}, storage?: Storage) =>\r\n          (storage || this.storage).setItem(key, JSON.stringify(state)))\r\n    )\r\n    this.reducer = (\r\n      (options.reducer != null)\r\n        ? options.reducer\r\n        : (\r\n          (options.modules == null)\r\n            ? ((state: S) => state)\r\n            : (\r\n              (state: any) =>\r\n                (<string[]>options.modules).reduce((a, i) =>\r\n                  Object.assign(a, { [i]: state[i] }), {})\r\n            )\r\n        )\r\n    )\r\n    this.filter = (\r\n      (options.filter != null)\r\n        ? options.filter\r\n        : ((mutation) => true)\r\n    )\r\n\r\n    this.plugin = (store: Store<S>) => {\r\n      const savedState = this.restoreState(this.key, this.storage)\r\n      store.replaceState(merge(store.state, savedState))\r\n\r\n      this.subscriber(store)((mutation: P, state: S) => {\r\n        if (this.filter(mutation)) {\r\n          this.saveState(this.key, this.reducer(state), this.storage)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a subscriber on the store. automatically is used\r\n   * when this is used a vuex plugin. Not for manual usage.\r\n   * @param store\r\n   */\r\n  private subscriber = (store: Store<S>) =>\r\n    (handler: (mutation: P, state: S) => any) => store.subscribe(handler)\r\n\r\n}\r\n\r\nexport {\r\n  MockStorage\r\n}\r\n\r\nexport default VuexPersistence;"],"names":[],"mappings":"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"}